{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\durki\\\\Desktop\\\\Fullstack-Open\\\\part 1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n_c = Button;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  function calculateAverage() {\n    return (good - bad) / (good + bad + neutral);\n  }\n  if (good + neutral + bad == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: `good ${good}`,\n        stat: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: `neutral`,\n        stat: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: `bad`,\n        stat: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: `all`,\n        stat: good + bad + neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: `average`,\n        stat: calculateAverage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: `positive`,\n        stat: good / (good + bad + neutral)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this);\n  }\n};\n_c2 = Statistics;\nconst StatisticLine = _ref3 => {\n  let {\n    text\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n_c3 = StatisticLine;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"StatisticLine\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","onClick","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Statistics","_ref2","good","neutral","bad","calculateAverage","StatisticLine","stat","_c2","_ref3","_c3","App","_s","setGood","setNeutral","setBad","_c4","$RefreshReg$"],"sources":["C:/Users/durki/Desktop/Fullstack-Open/part 1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ onClick, text }) => ( \n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\nconst Statistics = ({ good, neutral, bad }) => { \n\n  function calculateAverage() {\n    return (good - bad) / (good + bad + neutral)\n  }\n\n  if (good + neutral + bad == 0) {\n    return <div>No feedback given</div>\n  }\n  else {\n  return (\n  <div>\n    <h1>Statistics</h1>\n    <StatisticLine text={`good ${good}`} stat={good}/>\n    <StatisticLine text={`neutral`} stat={neutral}/>\n    <StatisticLine text={`bad`} stat={bad} />\n    <StatisticLine text={`all`} stat={good + bad + neutral} />\n    <StatisticLine text={`average`} stat={calculateAverage()} />\n    <StatisticLine text={`positive`} stat={good / (good + bad + neutral)} />\n  </div>\n  )\n  }\n}\n\nconst StatisticLine = ({ text }) => (\n  <div>\n    {text}\n  </div>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)  \n\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button onClick={() => setGood(good + 1)} text={\"good\"} />\n      <Button onClick={() => setNeutral(neutral + 1)} text={\"neutral\"} />\n      <Button onClick={() => setBad(bad + 1)} text={\"bad\"} />\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}