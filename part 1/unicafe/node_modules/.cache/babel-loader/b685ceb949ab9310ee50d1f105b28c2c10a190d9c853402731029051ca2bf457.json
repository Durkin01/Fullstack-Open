{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\durki\\\\Desktop\\\\Fullstack-Open\\\\part 1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n_c = Button;\nconst Statistics = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Statistics\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n    text: \"good\",\n    stat: good\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n    text: \"neutral\",\n    stat: neutral\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n    text: \"bad\",\n    stat: bad\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n    text: \"all\",\n    stat: good + bad + neutral\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n    text: \"average\",\n    stat: calculateAverage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n    text: \"% positive\",\n    stat: good / (good + neutral + bad)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n_c2 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  function calculateAverage() {\n    return (good - bad) / (good + bad + neutral);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","onClick","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Statistics","props","Statistic","stat","good","neutral","bad","calculateAverage","_c2","App","_s","setGood","setNeutral","setBad","_c3","$RefreshReg$"],"sources":["C:/Users/durki/Desktop/Fullstack-Open/part 1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ onClick, text }) => ( \n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\nconst Statistics = (props) => (\n  <div>\n    <h1>Statistics</h1>\n    <Statistic text={\"good\"} stat={good} />\n    <Statistic text={\"neutral\"} stat={neutral} />\n    <Statistic text={\"bad\"} stat={bad} />\n    <Statistic text={\"all\"} stat={good + bad + neutral} />\n    <Statistic text={\"average\"} stat={calculateAverage()} />\n    <Statistic text={\"% positive\"} stat={good / (good + neutral + bad)} />\n  </div>\n)\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)  \n\n  function calculateAverage() {\n    return (good - bad) / (good + bad + neutral)\n  }\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button onClick={() => setGood(good + 1)} text={\"good\"} />\n      <Button onClick={() => setNeutral(neutral + 1)} text={\"neutral\"} />\n      <Button onClick={() => setBad(bad + 1)} text={\"bad\"} />\n      <Statistics />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}