{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\durki\\\\Desktop\\\\Fullstack-Open\\\\part 1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n_c = Button;\nconst Statistics = _ref2 => {\n  let {\n    text,\n    stat\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n_c2 = Statistics;\nconst Statistic = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [text, \" \", stat]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this);\n_c3 = Statistic;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  function calculateAverage() {\n    return (good - bad) / (good + bad + neutral);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"good\",\n        stat: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"neutral\",\n        stat: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"bad\",\n        stat: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"all\",\n        stat: good + bad + neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"average\",\n        stat: calculateAverage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        text: \"% positive\",\n        stat: good / (good + neutral + bad)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Statistic\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","onClick","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Statistics","_ref2","stat","_c2","Statistic","props","_c3","App","_s","good","setGood","neutral","setNeutral","bad","setBad","calculateAverage","_c4","$RefreshReg$"],"sources":["C:/Users/durki/Desktop/Fullstack-Open/part 1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ onClick, text }) => ( \n  <button onClick={onClick}>\n    {text}\n  </button>\n)\n\nconst Statistics = ({ text, stat }) => (\n  <div>\n  </div>\n)\n\nconst Statistic = (props) => (\n  <div>\n    {text} {stat}\n  </div>\n)\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)  \n\n  function calculateAverage() {\n    return (good - bad) / (good + bad + neutral)\n  }\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n      <Button onClick={() => setGood(good + 1)} text={\"good\"} />\n      <Button onClick={() => setNeutral(neutral + 1)} text={\"neutral\"} />\n      <Button onClick={() => setBad(bad + 1)} text={\"bad\"} />\n      <div>\n        <h1>Statistics</h1>\n        <Statistics text={\"good\"} stat={good} />\n        <Statistics text={\"neutral\"} stat={neutral} />\n        <Statistics text={\"bad\"} stat={bad} />\n        <Statistics text={\"all\"} stat={good + bad + neutral} />\n        <Statistics text={\"average\"} stat={calculateAverage()} />\n        <Statistics text={\"% positive\"} stat={good / (good + neutral + bad)} />\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}